
package telas;

import com.mysql.cj.jdbc.PreparedStatementWrapper;
import dao.CadastroProdutoDao;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import javax.swing.table.DefaultTableModel;
import model.CadastroProduto;
import dao.ConexaoBanco;

/**
 *
 * @author difoz
 */
public class Cadastro extends javax.swing.JFrame {
    int vInsUpdate = 0;
    /**
     * Creates new form Cadastro
     */
    public Cadastro() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPreco = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtBuscar = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("ID");

        jLabel2.setText("Nome");

        txtId.setEditable(false);
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdKeyTyped(evt);
            }
        });

        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNomeKeyPressed(evt);
            }
        });

        jLabel3.setText("Preco");

        jLabel4.setText("Quantidade");

        jLabel5.setText("Descrição");

        jLabel6.setText("Buscar");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Preço", "Quantidade", "Descrição"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
        }

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalvarMouseClicked(evt);
            }
        });
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jButton1.setText("Remover");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addGap(75, 75, 75)
                                .addComponent(btnSalvar))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(72, 72, 72)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(74, 74, 74)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvar)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isDigit((c))){
            evt.consume();
        }
    }//GEN-LAST:event_txtIdKeyTyped

    private void txtIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyPressed
        // TODO add your handling code here:
        if(evt.getExtendedKeyCode() == evt.VK_ENTER){
            txtNome.requestFocus();
        }
    }//GEN-LAST:event_txtIdKeyPressed

    private void txtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyPressed
        // TODO add your handling code here:
         if(evt.getExtendedKeyCode() == evt.VK_ENTER){
            txtPreco.requestFocus();
        }
    }//GEN-LAST:event_txtNomeKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if(jTable1.getSelectedRow() != -1){
          int msgRetorno = JOptionPane.showConfirmDialog(null, 
                                      "Confirme para remover o cadastro", 
                                      "Confirmação", 
                                      JOptionPane.YES_NO_OPTION); 
                if (msgRetorno == JOptionPane.YES_OPTION) {
                    int id = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());

                    CadastroProdutoDao produtoDAO = new CadastroProdutoDao();
                    produtoDAO.excluirId(id);
                    DefaultTableModel tbcadastro = (DefaultTableModel) jTable1.getModel();
                    tbcadastro.removeRow(jTable1.getSelectedRow());  
                    limparCampos();
                } 
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um Cadastro para excluir!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        if((jTable1.getSelectedRow() != -1) && (vInsUpdate == 0) && (evt.getClickCount() == 2)){
           txtId.setText(jTable1.getValueAt(jTable1.getSelectedRow(),0).toString());
           txtNome.setText(jTable1.getValueAt(jTable1.getSelectedRow(),1).toString());
           txtPreco.setText(jTable1.getValueAt(jTable1.getSelectedRow(),2).toString());
           txtQuantidade.setText(jTable1.getValueAt(jTable1.getSelectedRow(),3).toString());
           txtDescricao.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
           
           vInsUpdate = 1;
           jTable1.enable(false);
           btnSalvar.setText("Alterar");
           txtId.setEnabled(false);
        }   
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnSalvarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalvarMouseClicked
        // TODO add your handling code here:
        if( (txtNome.getText().trim().isEmpty()) 
               || (txtPreco.getText().trim().isEmpty()) 
               || (Integer.parseInt(txtQuantidade.getText()) < 0)
               || (txtDescricao.getText().trim().isEmpty())){
                   JOptionPane.showMessageDialog(null, "Dados Inválidos");
                   txtNome.requestFocus();
       }else{
         if (vInsUpdate == 0) { 
             CadastroProduto produto = new CadastroProduto(
                //Integer.parseInt(txtId.getText()),
                txtNome.getText(),
                Double.parseDouble(txtPreco.getText()), 
                Integer.parseInt(txtQuantidade.getText()), 
                txtDescricao.getText()
            );


        CadastroProdutoDao produtoDAO = new CadastroProdutoDao();
        produtoDAO.inserir(produto);
         CadastroProdutoDao CadastroProdutos = new CadastroProdutoDao();
         atualizaTabela(CadastroProdutos);
            JOptionPane.showMessageDialog(null, "Cadastro efetuado:"+ "\n" +  
                "ID" + txtId.getText() + "\n" +
                "Nome: " + txtNome.getText() + "\n" +
                "Preco: " + txtPreco.getText() + "\n" +
                "Quantidade: " + txtQuantidade.getText() + "\n" +
                "Descricao: " + txtDescricao.getText() + "\n");

                //DefaultTableModel tbcadastro = (DefaultTableModel) jTable1.getModel();
              //  Object [] dados = {txtId.getText(),txtNome.getText(), txtPreco.getText(), txtQuantidade.getText(), txtDescricao.getText()};
               // tbcadastro.addRow(dados);        
                
                

                int msgRetorno = JOptionPane.showConfirmDialog(null, 
                                      "Deseja limpar os campos?", 
                                      "Confirmação", 
                                      JOptionPane.YES_NO_OPTION); 
                if (msgRetorno == JOptionPane.YES_OPTION) {
                    limparCampos();
                }
       }else{
             
           jTable1.setValueAt(txtId.getText(), jTable1.getSelectedRow(), 0);
           jTable1.setValueAt(txtNome.getText(), jTable1.getSelectedRow(), 1);
           jTable1.setValueAt(txtPreco.getText(), jTable1.getSelectedRow(), 2);
           jTable1.setValueAt(txtQuantidade.getText(), jTable1.getSelectedRow(), 3);           
           jTable1.setValueAt(txtDescricao.getText(), jTable1.getSelectedRow(), 4);
           
           CadastroProduto produto = new CadastroProduto(
            Integer.parseInt(txtId.getText()),
            txtNome.getText(),
            Double.parseDouble(txtPreco.getText()), 
            Integer.parseInt(txtQuantidade.getText()), 
            txtDescricao.getText()
        );
           CadastroProdutoDao alterProduto = new CadastroProdutoDao();
           alterProduto.alterar(produto);
           
           limparCampos();
           vInsUpdate = 0;
           
           
           
           jTable1.enable(true);
           btnSalvar.setText("Cadastrar");
       }  
        }
    }//GEN-LAST:event_btnSalvarMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        CadastroProdutoDao CadastroProdutos = new CadastroProdutoDao();
        atualizaTabela(CadastroProdutos);
        
    }//GEN-LAST:event_formWindowOpened

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try {
            new dao.ConexaoBanco().conectar();
            JOptionPane.showMessageDialog(null, "Banco de dados conectado");
        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, 
                    "Ocorreu um erro inesperado:\n" + ex.getMessage(), "ERRO!", ERROR_MESSAGE);
        }     
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
   
        CadastroProdutoDao cadastroPDao = new CadastroProdutoDao();        
        buscarNome(cadastroPDao);
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void limparCampos()
    {

        this.txtId.setEnabled(true);
        this.txtId.setText("");
        this.txtNome.setText("");
        this.txtPreco.setText(null);
        this.txtQuantidade.setText(null);
        this.txtDescricao.setText(null);
    }
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cadastro().setVisible(true);
            }
        });
    }
    private void atualizaTabela(CadastroProdutoDao cadastroProd)
    {
        

                try
                {
                    limparTabela();
                    ArrayList<CadastroProduto> listaCadastros;
                    listaCadastros = cadastroProd.consultar();      
                    DefaultTableModel modeloTabela = (DefaultTableModel) jTable1.getModel();

                    for(CadastroProduto cadastroP : listaCadastros)
                    {
                        modeloTabela.addRow(new String[]{Integer.toString(cadastroP.getIdProduto()), 
                                                                            cadastroP.getNome(), 
                                                                            String.valueOf(cadastroP.getPreco()), 
                                                                            String.valueOf(cadastroP.getQuantidade()),
                                                                            cadastroP.getDescricao()});
                    }

                }
                catch(Exception ex)
                {
                    JOptionPane.showMessageDialog(null, "Ocorreu um erro inesperado:\n" + ex.getMessage(), "ERRO!", ERROR_MESSAGE);
                }
     
    }
    
    private void limparTabela()
    {
        while(jTable1.getRowCount() > 0) 
        {
            DefaultTableModel dm = (DefaultTableModel) jTable1.getModel();
            dm.getDataVector().removeAllElements();
        }
    }
    
    private void buscarNome(CadastroProdutoDao cadastroPDao)
    {
     
     
            try
            {

                limparTabela();

                ArrayList<CadastroProduto> listaCadastrosStr;
                listaCadastrosStr = cadastroPDao.consultar(txtBuscar.getText());           
                DefaultTableModel modeloTabela = (DefaultTableModel) jTable1.getModel();

                for(CadastroProduto cadastroP : listaCadastrosStr)
                {
                    modeloTabela.addRow(new String[]{Integer.toString(cadastroP.getIdProduto()), 
                                                                        cadastroP.getNome(), 
                                                                        String.valueOf(cadastroP.getPreco()), 
                                                                        String.valueOf(cadastroP.getQuantidade()),
                                                                        cadastroP.getDescricao()});
                }

            }
            catch(Exception ex)
            {
                JOptionPane.showMessageDialog(null, "Ocorreu um erro inesperado:\n" + ex.getMessage(), "ERRO!", ERROR_MESSAGE);
            }
      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPreco;
    private javax.swing.JTextField txtQuantidade;
    // End of variables declaration//GEN-END:variables
}

